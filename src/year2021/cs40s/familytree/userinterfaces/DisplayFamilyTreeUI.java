
/** Required package class namespace */
package year2021.cs40s.familytree.userinterfaces;

/** Required imports */
import year2021.cs40s.familytree.datastructures.Family;
import year2021.cs40s.familytree.datastructures.Globals;
import year2021.cs40s.familytree.datastructures.Person;


/**
 * DisplayFamilyTreeUI.java - This user interface (UI) is to display all 
 * information about a family
 *
 * @author Mr. Wachs' student 
 * @since Mar. 17, 2021 
 */
public class DisplayFamilyTreeUI extends javax.swing.JFrame {

    // <editor-fold defaultstate="collapsed" desc="All NetBeans Generated Code collapsed in NetBeans"> 
    
    /**
     * Creates new form DisplayFamilyTreeUI
     */
    public DisplayFamilyTreeUI(int index) {
        initComponents();        
        startup(index);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        list1 = new java.awt.List();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jButton4.setText("Return To Main Screen");
        jButton4.setToolTipText("");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(590, 10, 250, 40);

        jLabel1.setText("All Family Information:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 830, 50);
        getContentPane().add(list1);
        list1.setBounds(10, 60, 830, 690);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        returnToMainScreen();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        closeWindow();
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private java.awt.List list1;
    // End of variables declaration//GEN-END:variables

    // </editor-fold> 
    
    
    // Global variables (class properties) used by the class and its methods:
    private Family family;
        
    
    /**
     * When the constructor for this class is call (when the UI appears), set
     * the staring conditions for this class
     * 
     * @param index the family index location in the linked list of families
     */
    private void startup(int index) {
        // Get a reference to the family to display
        this.family = Globals.families.get(index);
        
        // Update label
        jLabel1.setText("All '" + family.name + "' Family Information:");
        
        // Update list box
        list1.removeAll();                                  // clear list box
        for (int i = 0; i < family.members.size(); i++) {   // loop through
            Person member = family.members.get(i);          // get a person
            list1.add(member.allInformation());             // add to the list
        }
        Globals.startup(this, 864, 790);
    }

    /**
     * The associated code with the button to return to main UI
     */
    private void returnToMainScreen() {
        new WelcomeUI();                            // Launch other UI
        this.dispose();                             // Dispose of this UI
    }
    
    /**
     * The associated code with the user closing this UI (by clicking the "X")
     */
    private void closeWindow() {
        Globals.end();
    }
    
}
