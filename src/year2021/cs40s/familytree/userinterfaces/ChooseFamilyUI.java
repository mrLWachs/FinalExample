
/** Required package class namespace */
package year2021.cs40s.familytree.userinterfaces;

/** Required imports */
import year2021.cs40s.familytree.datastructures.Family;
import year2021.cs40s.familytree.datastructures.Globals;


/**
 * ChooseFamilyUI.java - This user interface (UI) is for deleting, editing, or
 * seeing a family information
 *
 * @author Mr. Wachs' student 
 * @since Mar. 17, 2021 
 */
public class ChooseFamilyUI extends javax.swing.JFrame {

    // <editor-fold defaultstate="collapsed" desc="All NetBeans Generated Code collapsed in NetBeans"> 
    
    /**
     * Creates new form ChooseFamilyUI
     */
    public ChooseFamilyUI() {
        initComponents();
        startup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        list1 = new java.awt.List();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Choose The Family:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 330, 40);
        getContentPane().add(list1);
        list1.setBounds(10, 60, 330, 190);

        jButton1.setText("Delete Selected Family");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(350, 60, 200, 40);

        jButton2.setText("Edit Selected Family");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(350, 110, 200, 40);

        jButton3.setText("See Selected Family Tree");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(350, 160, 200, 40);

        jButton4.setText("Return To Main Screen");
        jButton4.setToolTipText("");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(350, 210, 200, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        returnToMainScreen();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        deleteSelectedFamily();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        editSelectedFamily();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        seeSelectedFamilyTree();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        closeWindow();
    }//GEN-LAST:event_formWindowClosing
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private java.awt.List list1;
    // End of variables declaration//GEN-END:variables
    
    // </editor-fold> 
          
    
    /**
     * When the constructor for this class is call (when the UI appears), set
     * the staring conditions for this class
     */
    private void startup() {
        list1.removeAll();                                  // clear list box
        for (int i = 0; i < Globals.families.size(); i++) { // loop through
            Family family = Globals.families.get(i);        // get a family
            list1.add(family.name);                         // add to the list
        }
        Globals.startup(this, 578, 300);
    }
    
    /**
     * The associated code with the button to delete the selected family
     */
    private void deleteSelectedFamily() {  
        int position = list1.getSelectedIndex();    // Get index from user click
        if (position == Globals.NOT_SELECTED) {     // User has not clicked 
            Globals.dialogs.output(Globals.NAME_ERROR);     // prompt user
        }
        else {                                      // User has made selction
            String prompt = "Are you sure you want to delete this family?";
            if (Globals.dialogs.yesNo(prompt)) {    // Confirm deletion
                list1.remove(position);             // remove from UI listbox
                Globals.families.remove(position);  // remove from LinkedList
            }
        }
    }
         
    /**
     * The associated code with the button to edit the selected family
     */
    private void editSelectedFamily() {
        int position = list1.getSelectedIndex();    // Get index from user click
        if (position == Globals.NOT_SELECTED) {     // User has not clicked 
            Globals.dialogs.output(Globals.NAME_ERROR);     // prompt user
        }
        else {                                      // User has made selction
            new EditFamilyMembersUI(position);      // Launch other UI
            this.dispose();                         // Dispose of this UI
        }
    }   
    
    /**
     * The associated code with the button to see a selected family
     */
    private void seeSelectedFamilyTree() {
        int position = list1.getSelectedIndex();    // Get index from user click
        if (position == Globals.NOT_SELECTED) {     // User has not clicked 
            Globals.dialogs.output(Globals.NAME_ERROR);     // prompt user
        }
        else {                                      // User has made selction
            new DisplayFamilyTreeUI(position);      // Launch other UI
            this.dispose();                         // Dispose of this UI
        }
    }
    
    /**
     * The associated code with the button to return to main UI
     */
    private void returnToMainScreen() {
        new WelcomeUI();                            // Launch other UI
        this.dispose();                             // Dispose of this UI
    }
    
    /**
     * The associated code with the user closing this UI (by clicking the "X")
     */
    private void closeWindow() {
        Globals.end();
    }
    
}
