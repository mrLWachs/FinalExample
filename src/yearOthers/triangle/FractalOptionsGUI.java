package yearOthers.triangle;


/** FractalOptionsGUI.java
 * Created on 24-Jan-2012, 1:39:25 PM
 * @author L Wachs */
public class FractalOptionsGUI extends javax.swing.JFrame 
{

    // <editor-fold defaultstate="collapsed" desc="Netbeans Editor Generated Code">
    
    /** Creates new form FractalOptionsGUI */
    public FractalOptionsGUI() {
        initComponents();
//        initGUI();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblInstructions = new javax.swing.JLabel();
        butQuit = new javax.swing.JButton();
        butColor = new javax.swing.JButton();
        butGenerate = new javax.swing.JButton();
        sliIterations = new javax.swing.JSlider();
        lblIterations = new javax.swing.JLabel();
        sliDotSize = new javax.swing.JSlider();
        lblDotSize = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        lblInstructions.setText("<html><div style=\"text-align: justify;\">Welcome to the Serpinski Triangle Generator, please select the number of iterations to use when generating, and the color or the triangle. Then click Generate to see the tringle, or click Quit to exit. Once the triangle screen comes up, click three times to define the points of the triangle then right click to begin generation. To return to this options screen, hit any key on your keyboard.</div></html>");
        getContentPane().add(lblInstructions);
        lblInstructions.setBounds(10, 10, 500, 110);

        butQuit.setText("Quit");
        butQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butQuitActionPerformed(evt);
            }
        });
        getContentPane().add(butQuit);
        butQuit.setBounds(10, 190, 90, 23);

        butColor.setText("Color");
        butColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butColorActionPerformed(evt);
            }
        });
        getContentPane().add(butColor);
        butColor.setBounds(10, 160, 90, 23);

        butGenerate.setText("Generate");
        butGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butGenerateActionPerformed(evt);
            }
        });
        getContentPane().add(butGenerate);
        butGenerate.setBounds(10, 130, 90, 23);

        sliIterations.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliIterationsStateChanged(evt);
            }
        });
        getContentPane().add(sliIterations);
        sliIterations.setBounds(110, 190, 390, 26);

        lblIterations.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIterations.setText("500");
        lblIterations.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblIterations);
        lblIterations.setBounds(110, 160, 390, 30);

        sliDotSize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliDotSizeStateChanged(evt);
            }
        });
        getContentPane().add(sliDotSize);
        sliDotSize.setBounds(110, 130, 390, 26);

        lblDotSize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDotSize.setText("50");
        getContentPane().add(lblDotSize);
        lblDotSize.setBounds(110, 110, 390, 14);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butGenerateActionPerformed
        generate();
    }//GEN-LAST:event_butGenerateActionPerformed

    private void butColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butColorActionPerformed
        chooseColor();
    }//GEN-LAST:event_butColorActionPerformed

    private void butQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butQuitActionPerformed
        quit();
    }//GEN-LAST:event_butQuitActionPerformed

    private void sliIterationsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliIterationsStateChanged
        sliderChange();
    }//GEN-LAST:event_sliIterationsStateChanged

    private void sliDotSizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliDotSizeStateChanged
        sliderDotChange();
    }//GEN-LAST:event_sliDotSizeStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butColor;
    private javax.swing.JButton butGenerate;
    private javax.swing.JButton butQuit;
    private javax.swing.JLabel lblDotSize;
    private javax.swing.JLabel lblInstructions;
    private javax.swing.JLabel lblIterations;
    private javax.swing.JSlider sliDotSize;
    private javax.swing.JSlider sliIterations;
    // End of variables declaration//GEN-END:variables

    // </editor-fold>
    
    private void generate() {
        FractalLogic.drawCanvas();
    }

    private void chooseColor() {
        FractalLogic.chooseColor();
    }

    private void quit() {
        FractalLogic.quit();
    }

    private void sliderChange() {
        FractalLogic.sliderChange();
    }

    public void initGUI() {
        FractalLogic.setOptions(sliIterations,sliDotSize,
                lblIterations,lblDotSize);
    }

    private void sliderDotChange() {
        FractalLogic.sliderDotChange();
    }
    
}
