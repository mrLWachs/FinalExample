package yearOthers.mousetest;

import java.awt.event.MouseEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;

/**
 * MouseTestGUI.java -
 * @author Mr. Wachs
 * @since
 * @version 1.0
 */

public class MouseTestGUI extends javax.swing.JFrame {

    private int     startingX;
    private int     startingY;
    private JButton buttons[];
    private Icon    blackImage;
    private Icon    whiteImage;
    
    // <editor-fold defaultstate="collapsed" desc="NetBeans Editor Generated Code">

    /** Creates new form MouseTestGUI */
    public MouseTestGUI() {
        setEnvironmentals();
        
        initComponents();
        setEnvironmentals();
        setDataStructures();
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fraBackground = new javax.swing.JPanel();
        lblMouse = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        getContentPane().setLayout(null);

        fraBackground.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        fraBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fraBackgroundMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fraBackgroundMouseReleased(evt);
            }
        });
        fraBackground.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                fraBackgroundMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                fraBackgroundMouseMoved(evt);
            }
        });
        fraBackground.setLayout(null);

        lblMouse.setBackground(new java.awt.Color(255, 255, 102));
        lblMouse.setForeground(new java.awt.Color(255, 102, 102));
        lblMouse.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        fraBackground.add(lblMouse);
        lblMouse.setBounds(230, 170, 120, 100);
        fraBackground.add(jButton1);
        jButton1.setBounds(290, 130, 20, 20);
        fraBackground.add(jButton2);
        jButton2.setBounds(80, 50, 20, 20);
        fraBackground.add(jButton3);
        jButton3.setBounds(320, 380, 20, 20);
        fraBackground.add(jButton4);
        jButton4.setBounds(160, 180, 20, 20);
        fraBackground.add(jButton5);
        jButton5.setBounds(510, 250, 20, 20);
        fraBackground.add(jButton6);
        jButton6.setBounds(100, 300, 20, 20);
        fraBackground.add(jButton7);
        jButton7.setBounds(500, 70, 20, 20);
        fraBackground.add(jButton8);
        jButton8.setBounds(360, 40, 20, 20);

        getContentPane().add(fraBackground);
        fraBackground.setBounds(0, 0, 600, 470);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fraBackgroundMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fraBackgroundMouseDragged
        dragSelection(evt);
    }//GEN-LAST:event_fraBackgroundMouseDragged

    private void fraBackgroundMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fraBackgroundMouseReleased
        mouseDown();
    }//GEN-LAST:event_fraBackgroundMouseReleased

    private void fraBackgroundMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fraBackgroundMousePressed

    }//GEN-LAST:event_fraBackgroundMousePressed

    private void fraBackgroundMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fraBackgroundMouseMoved

    }//GEN-LAST:event_fraBackgroundMouseMoved

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        resizeForm();
    }//GEN-LAST:event_formComponentResized

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel fraBackground;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel lblMouse;
    // End of variables declaration//GEN-END:variables

    // </editor-fold>

    /**
     * sets the look and feel of the GUI
     */
    private void setDataStructures() {
        FormTools.setGUI(this,605,497,"Mouse Drag Test",true,fraBackground);
        
        resizeForm();
        mouseDown();
    }

    /**
     * sets the global data structures
     */
    private void setEnvironmentals() {
        buttons = new JButton[8];
        buttons[0] = jButton1; buttons[1] = jButton2; buttons[2] = jButton3;
        buttons[3] = jButton4; buttons[4] = jButton5; buttons[5] = jButton6;
        buttons[6] = jButton7; buttons[7] = jButton8;
        startingX = 0;
        startingY = 0;
        blackImage = new ImageIcon(getClass().getResource("/yearOthers/mousetest/black.png"));
        whiteImage = new ImageIcon(getClass().getResource("/yearOthers/mousetest/white.png"));
    }

    /**
     * resizes the background frame and randomizes the button locations
     */
    private void resizeForm() {
        fraBackground.setLocation(-1,-1);
        fraBackground.setSize(this.getWidth(),this.getHeight());
        setRandomLocations();
    }

    /**
     * places the buttons into random locations around the form
     */
    private void setRandomLocations() {        
        int length = buttons.length;
        Coordinates buttonsData[] = new Coordinates[length];
        for (int i = 0; i < buttons.length; i++) {
            boolean isValid = true;
            int x = 0, y = 0;
            do {
                int lowX = 0;
                int highX = this.getWidth() - buttons[i].getWidth() - 100;
                int lowY = 0;
                int highY = this.getHeight() - buttons[i].getHeight() - 200;
                x = Toolbox.randomInteger(lowX,highX);
                y = Toolbox.randomInteger(lowY,highY);
                buttonsData[i] = new Coordinates(buttons[i]);
                isValid = true;
                for (int j = 0; j < i; j++) {
                    if (buttonsData[i].isCollidingWith(buttonsData[j]))
                        isValid = false;
                }
            } while(isValid == false);
            buttons[i].setLocation(x,y);
            buttons[i].setIcon(blackImage); 
        }
    }

    /**
     *
     * @param evt
     */
    private void dragSelection(MouseEvent evt) {
        lblMouse.setVisible(true);
        if (startingX == 0) {
            startingX = evt.getX();
            startingY = evt.getY();
        }
        else {
            int endingX = evt.getX();
            int endingY = evt.getY();
            int width  = endingX - startingX;
            int height = endingY - startingY;
            if (width >= 0 && height >= 0) {
                lblMouse.setLocation(startingX,startingY);
            }
            else if (width >= 0 && height < 0) {
                height = Math.abs(height);
                lblMouse.setLocation(endingX-width,endingY);
            }
            else if (width < 0 && height >= 0) {
                width = Math.abs(width);
                lblMouse.setLocation(endingX,endingY-height);
            }
            else if (width < 0 && height < 0) {
                width = Math.abs(width);
                height = Math.abs(height);
                lblMouse.setLocation(endingX,endingY);
            }
            lblMouse.setSize(width,height);
        }
    }

    /**
     *
     */
    private void checkSelection() {
        Coordinates selection = new Coordinates(lblMouse);
        for (int i = 0; i < buttons.length; i++) {
            Coordinates square = new Coordinates(buttons[i]);
            if (selection.isCollidingWith(square))
                selectButton(i);
        }
    }

    /**
     *
     * @param button
     */
    private void selectButton(int button) {
        if (buttons[button].getIcon() == blackImage) {
            buttons[button].setIcon(whiteImage);
        }
        else if (buttons[button].getIcon() == whiteImage) {
            buttons[button].setIcon(blackImage);
        }
    }

    /**
     *
     */
    private void mouseDown() {
        checkSelection();
        startingX = 0;
        startingY = 0;
        lblMouse.setVisible(false);
        lblMouse.setSize(1, 1);
        lblMouse.setLocation(-1, -1);        
    }
    
}
