
/** Required package namespace */
package year2022.cs30s.matriximages;

/** Required import statements */
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;


/** 
 * UserInterface.java - This is a frame (form) user interface (UI) container 
 * created using the NetBeans Designer to add the labels, add a border to the 
 * labels, add a title to the frame, and make the frame not resizable all 
 * using the properties window in the designer. I did right click on the frame
 * and set the layout to null (this allows more control of where I place
 * items) but I now have to set the size of the frame using code.
 *
 * @author Mr. Wachs 
 * @since 20-Jan-2022 
*/
public class UserInterface extends javax.swing.JFrame {

    /**
     * Constructor method (written by designer) creates new form DesignerUI
     */
    public UserInterface() {
        initComponents();
        
        // Now calls to custom methods (written below) or any other needed code
        // not provided by the NetBeans designer
        setFrame();
        setDataStructures();
        this.setVisible(true);                  // Make form appear to the user
    }

    //##########################################################################
    // NOTE: the NetBeans visual designer adds the code below which can NOT be
    // edited, it also adds other code like the constructor above which you can 
    // edit, add to, delete etc. The "Generated code" below can be seen by 
    // clicking the "plus sign +" to expand the code
    //##########################################################################
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel30 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        toolsLabel1 = new javax.swing.JLabel();
        toolsLabel2 = new javax.swing.JLabel();
        toolsLabel3 = new javax.swing.JLabel();
        boardLabelRow0Column0 = new javax.swing.JLabel();
        boardLabelRow0Column1 = new javax.swing.JLabel();
        boardLabelRow0Column2 = new javax.swing.JLabel();
        boardLabelRow0Column3 = new javax.swing.JLabel();
        boardLabelRow0Column4 = new javax.swing.JLabel();
        boardLabelRow1Column0 = new javax.swing.JLabel();
        boardLabelRow1Column1 = new javax.swing.JLabel();
        boardLabelRow1Column2 = new javax.swing.JLabel();
        boardLabelRow1Column3 = new javax.swing.JLabel();
        boardLabelRow1Column4 = new javax.swing.JLabel();
        boardLabelRow2Column0 = new javax.swing.JLabel();
        boardLabelRow2Column1 = new javax.swing.JLabel();
        boardLabelRow2Column2 = new javax.swing.JLabel();
        boardLabelRow2Column3 = new javax.swing.JLabel();
        boardLabelRow2Column4 = new javax.swing.JLabel();
        boardLabelRow3Column0 = new javax.swing.JLabel();
        boardLabelRow3Column1 = new javax.swing.JLabel();
        boardLabelRow3Column2 = new javax.swing.JLabel();
        boardLabelRow3Column3 = new javax.swing.JLabel();
        boardLabelRow3Column4 = new javax.swing.JLabel();
        boardLabelRow4Column0 = new javax.swing.JLabel();
        boardLabelRow4Column1 = new javax.swing.JLabel();
        boardLabelRow4Column2 = new javax.swing.JLabel();
        boardLabelRow4Column3 = new javax.swing.JLabel();
        boardLabelRow4Column4 = new javax.swing.JLabel();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Tools:");
        getContentPane().add(jLabel30);
        jLabel30.setBounds(30, 20, 90, 20);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Board:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(190, 20, 90, 20);

        toolsLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toolsLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/year2022/cs30s/matriximages/spaceship1.gif"))); // NOI18N
        toolsLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(toolsLabel1);
        toolsLabel1.setBounds(30, 50, 100, 100);

        toolsLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toolsLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/year2022/cs30s/matriximages/spaceship2.gif"))); // NOI18N
        toolsLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(toolsLabel2);
        toolsLabel2.setBounds(30, 160, 100, 100);

        toolsLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toolsLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/year2022/cs30s/matriximages/spaceship3.gif"))); // NOI18N
        toolsLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(toolsLabel3);
        toolsLabel3.setBounds(30, 270, 100, 100);

        boardLabelRow0Column0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow0Column0.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow0Column0);
        boardLabelRow0Column0.setBounds(190, 50, 100, 100);

        boardLabelRow0Column1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow0Column1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow0Column1);
        boardLabelRow0Column1.setBounds(290, 50, 100, 100);

        boardLabelRow0Column2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow0Column2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow0Column2);
        boardLabelRow0Column2.setBounds(390, 50, 100, 100);

        boardLabelRow0Column3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow0Column3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow0Column3);
        boardLabelRow0Column3.setBounds(490, 50, 100, 100);

        boardLabelRow0Column4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow0Column4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow0Column4);
        boardLabelRow0Column4.setBounds(590, 50, 100, 100);

        boardLabelRow1Column0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow1Column0.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow1Column0);
        boardLabelRow1Column0.setBounds(190, 150, 100, 100);

        boardLabelRow1Column1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow1Column1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow1Column1);
        boardLabelRow1Column1.setBounds(290, 150, 100, 100);

        boardLabelRow1Column2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow1Column2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow1Column2);
        boardLabelRow1Column2.setBounds(390, 150, 100, 100);

        boardLabelRow1Column3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow1Column3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow1Column3);
        boardLabelRow1Column3.setBounds(490, 150, 100, 100);

        boardLabelRow1Column4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow1Column4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow1Column4);
        boardLabelRow1Column4.setBounds(590, 150, 100, 100);

        boardLabelRow2Column0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow2Column0.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow2Column0);
        boardLabelRow2Column0.setBounds(190, 250, 100, 100);

        boardLabelRow2Column1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow2Column1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow2Column1);
        boardLabelRow2Column1.setBounds(290, 250, 100, 100);

        boardLabelRow2Column2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow2Column2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow2Column2);
        boardLabelRow2Column2.setBounds(390, 250, 100, 100);

        boardLabelRow2Column3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow2Column3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow2Column3);
        boardLabelRow2Column3.setBounds(490, 250, 100, 100);

        boardLabelRow2Column4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow2Column4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow2Column4);
        boardLabelRow2Column4.setBounds(590, 250, 100, 100);

        boardLabelRow3Column0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow3Column0.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow3Column0);
        boardLabelRow3Column0.setBounds(190, 350, 100, 100);

        boardLabelRow3Column1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow3Column1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow3Column1);
        boardLabelRow3Column1.setBounds(290, 350, 100, 100);

        boardLabelRow3Column2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow3Column2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow3Column2);
        boardLabelRow3Column2.setBounds(390, 350, 100, 100);

        boardLabelRow3Column3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow3Column3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow3Column3);
        boardLabelRow3Column3.setBounds(490, 350, 100, 100);

        boardLabelRow3Column4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow3Column4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow3Column4);
        boardLabelRow3Column4.setBounds(590, 350, 100, 100);

        boardLabelRow4Column0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow4Column0.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow4Column0);
        boardLabelRow4Column0.setBounds(190, 450, 100, 100);

        boardLabelRow4Column1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow4Column1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow4Column1);
        boardLabelRow4Column1.setBounds(290, 450, 100, 100);

        boardLabelRow4Column2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow4Column2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow4Column2);
        boardLabelRow4Column2.setBounds(390, 450, 100, 100);

        boardLabelRow4Column3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow4Column3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow4Column3);
        boardLabelRow4Column3.setBounds(490, 450, 100, 100);

        boardLabelRow4Column4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabelRow4Column4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(boardLabelRow4Column4);
        boardLabelRow4Column4.setBounds(590, 450, 100, 100);

        backgroundLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/year2022/cs30s/matriximages/starsBackground.jpg"))); // NOI18N
        backgroundLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(backgroundLabel);
        backgroundLabel.setBounds(10, 10, 700, 560);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //##########################################################################
    // NOTE: the NetBeans visual designer when a JFrame form is added to a 
    // project also adds a main method below for each JFrame form, but this 
    // main method can be edited and removed. I have removed the main method  
    // for this class
    //##########################################################################
    
    // Properties (global variables)...........................................
    
    // Constants...............................................................
    
    private final int       FRAME_WIDTH      = 737;
    private final int       FRAME_HEIGHT     = 618;
    private final String    FRAME_TITLE      = "Matrix Image Example";
    private final Color     FRAME_BACKGROUND = new Color(0,0,0);
    
    // For an icon for the frame, it "steals" code the designer writes to
    // put images in the labels using a similar method
    private final ImageIcon FRAME_ICON       = new ImageIcon(
            getClass().getResource("/year2022/cs30s/matriximages/spaceIcon.png"));
    
    private final int       BOARD_ROWS       = 5;
    private final int       BOARD_COLUMNS    = BOARD_ROWS;  // Perfect square
    private final int       TOOLS_SIZE       = 3;    
    private final int       NOT_SELECTED     = -1;
    private final Color     TOOL_SELECTED    = new Color(224,224,224);
    
    
    // Variable objects (including design objects like JLabels)................
    
    private JLabel[]   tools;           // Array to hold the tools on the left
    private JLabel[][] board;           // Matrix to hold all the board labels
    
    private int toolSelected;
    
    // Methods (custom)........................................................
    
    /**
     * Sets the properties of the frame/form user interface (UI)
     */
    private void setFrame() {
        this.setSize(FRAME_WIDTH,FRAME_HEIGHT);         // The size of frame
        this.setIconImage(FRAME_ICON.getImage());       // Set an icon
        this.setTitle(FRAME_TITLE);                     // Change title
        this.setBackground(FRAME_BACKGROUND);           // Set background color
        this.getContentPane().setBackground(FRAME_BACKGROUND);  // Also this
        this.setResizable(false);                       // Not resizable
        this.setLocationRelativeTo(null);               // Center form on screen         
    }
    
    /**
     * Set the data structures (variables) and objects not created by the 
     * designer
     */
    private void setDataStructures() {
        // We need to size the array and matrix
        tools = new JLabel[TOOLS_SIZE];
        board = new JLabel[BOARD_ROWS][BOARD_COLUMNS];
        
        // We need to assign all the objects (JLabels) from the designer into
        // our array and matrix. I did take the time to rename all the objects
        // using the designer and right clicking and "rename" to make this 
        // a little easier. You can also use the Navigator window when using
        // the designer to drag and drop bjects like labels to place them
        // "behind" other objects (like the background label) and also to
        // rename them
        tools[0]    = toolsLabel1;
        tools[1]    = toolsLabel2;
        tools[2]    = toolsLabel3;
        board[0][0] = boardLabelRow0Column0;
        board[0][1] = boardLabelRow0Column1;
        board[0][2] = boardLabelRow0Column2;
        board[0][3] = boardLabelRow0Column3;
        board[0][4] = boardLabelRow0Column4;
        board[1][0] = boardLabelRow1Column0;
        board[1][1] = boardLabelRow1Column1;
        board[1][2] = boardLabelRow1Column2;
        board[1][3] = boardLabelRow1Column3;
        board[1][4] = boardLabelRow1Column4;
        board[2][0] = boardLabelRow2Column0;
        board[2][1] = boardLabelRow2Column1;
        board[2][2] = boardLabelRow2Column2;
        board[2][3] = boardLabelRow2Column3;
        board[2][4] = boardLabelRow2Column4;
        board[3][0] = boardLabelRow3Column0;
        board[3][1] = boardLabelRow3Column1;
        board[3][2] = boardLabelRow3Column2;
        board[3][3] = boardLabelRow3Column3;
        board[3][4] = boardLabelRow3Column4;
        board[4][0] = boardLabelRow4Column0;
        board[4][1] = boardLabelRow4Column1;
        board[4][2] = boardLabelRow4Column2;
        board[4][3] = boardLabelRow4Column3;
        board[4][4] = boardLabelRow4Column4;
        
        // Now we will add mouse listener events to all the objects in the 
        // array. this could be done in the designer by right clicking going
        // to events -> mouse -> mouseClicked, but instead now that the labels
        // are all in our array we can do it this way...
        for (int i = 0; i < tools.length; i++) {
            
            // Assign loop variable to a constant (this is needed for
            // 'inner classes') and odd code qwerk in Java
            final int INDEX = i;
            
            tools[i].addMouseListener(new MouseListener() {
                public void mouseClicked(MouseEvent e)  {                    
                    // Here I jump to a custom method below and take the index
                    // number of which tool I just clicked on
                    toolClick(INDEX);
                }
                public void mousePressed(MouseEvent e)  {                }
                public void mouseReleased(MouseEvent e) {                }
                public void mouseEntered(MouseEvent e)  {                }
                public void mouseExited(MouseEvent e)   {                }
            });
        }
        
        // We do the same thing with the matrix
        for (int row = 0; row < BOARD_ROWS; row++) {
            for (int column = 0; column < BOARD_COLUMNS; column++) {
                final int ROW    = row;
                final int COLUMN = column;
                board[row][column].addMouseListener(new MouseListener() {
                    public void mouseClicked(MouseEvent e)  {
                        boardClick(ROW,COLUMN);
                    }
                    public void mousePressed(MouseEvent e)  {                }
                    public void mouseReleased(MouseEvent e) {                }
                    public void mouseEntered(MouseEvent e)  {                }
                    public void mouseExited(MouseEvent e)   {                }
                });
                
            }
        }
        
        // Set the variable to indicate no tool is yet selected
        toolSelected = NOT_SELECTED;                
    }

    /**
     * The action that should occur when the user clicks a label (image) in the
     * array of tools
     * 
     * @param index the specific label index in the array the mouse clicked on
     */
    private void toolClick(int index) {
        // Reset all tools first
        for (int i = 0; i < tools.length; i++) {
            tools[i].setOpaque(false);
        }
        // Now highlight the selected tool
        toolSelected = index;
        tools[index].setOpaque(true);
        tools[index].setBackground(TOOL_SELECTED);
    }
    
    /**
     * The action that should occur when the user clicks a label (image) in the
     * matrix of labels
     * 
     * @param index the specific label index in the matrix the mouse clicked on
     */
    private void boardClick(int row, int column) {
        // Error check to make sure the user has selected a tool first
        if (toolSelected != NOT_SELECTED) {            
            // Now set the selected board location to the same image as the 
            // tool selected
            Icon icon = tools[toolSelected].getIcon();

            // Change over the icon to the selected tool
            board[row][column].setIcon(icon);

            // Now set the variable to indicate this action is complete
            toolSelected = NOT_SELECTED;
            
            // Reset all tools back
            for (int i = 0; i < tools.length; i++) {
                tools[i].setOpaque(false);
            }
        }
    }
    
    //##########################################################################
    // NOTE: the NetBeans visual designer adds the code below for each 
    // component (control, widget, property, global variable) which also 
    // cannot be edited
    //##########################################################################
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JLabel boardLabelRow0Column0;
    private javax.swing.JLabel boardLabelRow0Column1;
    private javax.swing.JLabel boardLabelRow0Column2;
    private javax.swing.JLabel boardLabelRow0Column3;
    private javax.swing.JLabel boardLabelRow0Column4;
    private javax.swing.JLabel boardLabelRow1Column0;
    private javax.swing.JLabel boardLabelRow1Column1;
    private javax.swing.JLabel boardLabelRow1Column2;
    private javax.swing.JLabel boardLabelRow1Column3;
    private javax.swing.JLabel boardLabelRow1Column4;
    private javax.swing.JLabel boardLabelRow2Column0;
    private javax.swing.JLabel boardLabelRow2Column1;
    private javax.swing.JLabel boardLabelRow2Column2;
    private javax.swing.JLabel boardLabelRow2Column3;
    private javax.swing.JLabel boardLabelRow2Column4;
    private javax.swing.JLabel boardLabelRow3Column0;
    private javax.swing.JLabel boardLabelRow3Column1;
    private javax.swing.JLabel boardLabelRow3Column2;
    private javax.swing.JLabel boardLabelRow3Column3;
    private javax.swing.JLabel boardLabelRow3Column4;
    private javax.swing.JLabel boardLabelRow4Column0;
    private javax.swing.JLabel boardLabelRow4Column1;
    private javax.swing.JLabel boardLabelRow4Column2;
    private javax.swing.JLabel boardLabelRow4Column3;
    private javax.swing.JLabel boardLabelRow4Column4;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel toolsLabel1;
    private javax.swing.JLabel toolsLabel2;
    private javax.swing.JLabel toolsLabel3;
    // End of variables declaration//GEN-END:variables
}
